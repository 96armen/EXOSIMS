version: 2.1
jobs:
  test:
    parallelism: 4
    #run 4 test runs at the same time
    working_directory: ~/circleci-python
    docker:
      - image: "circleci/python:3.9.5"
    # uses python 3.9.5 
    steps:
      - checkout
      - run: 
          name: Grant local/bin permission
          command: sudo chown -R circleci:circleci /usr/local/bin
      - run: 
          name: Grant lib/python3.9 permission
          command: sudo chown -R circleci:circleci /usr/local/lib/python3.9/site-packages
      - restore_cache:
          name: install dependencies start (install cache if one exists)
          key: -v3-{{ checksum "requirements.txt" }}
      - run: pip install --upgrade pip
      - run: pip install --upgrade -r requirements.txt
      - run: pip install coverage
      - run: pip install unittest-xml-reporting
      - run: pip install -e .
      - save_cache: 
          key: -v3-{{ checksum "requirements.txt" }}
          name: install dependencies end (generate cache if one doesn't exist)
          paths: 
            - ".venv"
            - "/usr/local/lib/python3.9/site-packages"
            - "/usr/local/bin"
      # build the environment. the caching steps restore the dependencies from CircleCI's servers from past runs to make things a bit faster 
      - run: mkdir -p coverages
      # coverage files for each parallel run is stored in here
      - run: 
          name: find and run tests and generate coverage files
          no_output_timeout: 60m
          # some tests take quite a long time to finish so the default time has to be increased, particularly when circleci first generates the timing data for the tests 
          command: |
            TESTFILES=$(circleci tests glob "tests/**/test_*.py" | circleci tests split --split-by=timings)
            python runtests.py $TESTFILES
      - store_test_results:
          path: test-reports
      # store test results for circleci's test splitting 
      - store_artifacts:
          path: test-reports 
      - persist_to_workspace:
          root: coverages
          paths: 
            - ./*
      # save the .coverage to the project's workspace to be combined in the done step

  done:
    working_directory: ~/circleci-python
    docker:
    - image: "circleci/python:3.9.5"
    steps:
      - checkout
      - run: pip install coverage
      - run: pip install coveralls
      - attach_workspace: 
          at: ~/
      - run: coverage combine ~/
      # combine the coverage files from the workspace in the home directory
      - run: coveralls 

workflows:
  test_then_upload:
    jobs:
      - test
      - done: 
          requires: [test]
